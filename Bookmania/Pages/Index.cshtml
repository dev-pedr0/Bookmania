@page
@model IndexModel
@{
    ViewData["Title"] = "Bookmania - Compra e Aluguel de Livros";
}

<style>
    body {
        background-color: #1e1e1e;
        color: #f5f5f5;
        font-family: 'Segoe UI', sans-serif;
    }

    h1, h2 {
        color: #d2a679;
    }

    .tabela-livros {
        border-collapse: collapse;
        margin-top: 20px;
        width: 100%;
    }

    .tabela-livros th {
        background-color: #3a2f2f;
        color: #f5f5f5;
        padding: 10px;
        text-align: center;
    }

    .tabela-livros td {
        padding: 8px;
        vertical-align: middle;
        text-align: center;
        background-color: inherit !important;
        color: inherit;
    }

    .linha-indisponivel {
        background-color: rgba(255, 0, 0, 0.2);
    }

    .btn-add {
        background-color: #d2a679;
        color: #1e1e1e;
        border-radius: 5px;
        padding: 5px 10px;
        border: none;
        cursor: pointer;
    }

    .btn-add:hover:not(:disabled) {
        background-color: #b88c5a;
    }

    .btn-add:disabled {
        background-color: #555 !important;
        color: #aaa !important;
        cursor: not-allowed;
        opacity: 0.6;
    }

    input[type="number"] {
        width: 60px;
        border-radius: 4px;
        border: 1px solid #555555;
        color: black;
        padding: 3px;
    }

    a {
        color: #f5f5f5;
        text-decoration: none;
    }

    a:hover {
        color: #b88c5a;
        cursor: pointer;
    }

    .pagination .page-link {
        background-color: #d2a679;
        color: #1e1e1e;
        border: 1px solid #d2a679;
    }

        .pagination .page-link:hover {
            background-color: #b88c5a;
            color: white;
        }

    .pagination .page-item.active .page-link {
        background-color: #b88c5a;
        border-color: #b88c5a;
        color: white;
    }

    .pagination .page-link:focus {
        box-shadow: none;
    }
</style>

<div class="text-center mb-4">
    <h1>Bookmania</h1>
    <h2>A melhor loja de compra e aluguel de livros!</h2>
    <p>Explore nosso acervo. Livros para todos os gostos, seja para comprar ou alugar.</p>
</div>

<form method="get" class="mb-4">
    <div class="row gx-3 gy-2 align-items-center">
        <div class="col-sm-6 col-md-3">
            <label for="currentTitle" class="form-label text-light">Título:</label>
            <input id="currentTitle" type="text" name="currentTitle" value="@Model.CurrentTitle" class="form-control" />
        </div>
        <div class="col-sm-6 col-md-3">
            <label for="currentAuthor" class="form-label text-light">Autor:</label>
            <input id="currentAuthor" type="text" name="currentAuthor" value="@Model.CurrentAuthor" class="form-control" />
        </div>
        <div class="col-sm-6 col-md-2">
            <label for="currentTema" class="form-label text-light">Tema:</label>
            @{
                var todosSelected = string.IsNullOrEmpty(Model.CurrentTema) ? "selected" : null;
            }
            <select name="currentTema" class="form-select">
                <option value="" selected="@todosSelected">Todos</option>
                @foreach (var tema in Model.TemasSelectList)
                {
                    var selected = Model.CurrentTema == tema.Value ? "selected" : null;
                    <option value="@tema.Value" selected="@selected">@tema.Text</option>
                }
            </select>
        </div>
        <div class="col-sm-6 col-md-2 d-flex align-items-center">
            <input type="checkbox" class="form-check-input" id="somenteDisponiveis" name="somenteDisponiveis" value="true" @(Model.SomenteDisponiveis ? "checked" : "") />
            <label for="somenteDisponiveis" class="form-check-label ms-2 text-light">Somente Disponíveis</label>
        </div>
        <div class="col-sm-6 col-md-2 d-flex align-items-center">
            <input type="checkbox" class="form-check-input" id="mostrarCotacaoEspecial" name="mostrarCotacaoEspecial" value="true" @(Model.MostrarCotacaoEspecial ? "checked" : "") />
            <label for="mostrarCotacaoEspecial" class="form-check-label ms-2 text-light">Incluir Cotação Especial</label>
        </div>
        <div class="col-12 col-md-2 d-flex justify-content-md-start mt-2">
            <button type="submit" class="btn btn-warning text-dark w-100">
                Filtrar
            </button>
        </div>
    </div>
</form>

@if (TempData["Mensagem"] != null)
{
    <div class="alert alert-success text-center" role="alert">
        @TempData["Mensagem"]
    </div>
}

<table class="table tabela-livros table-hover text-center align-middle">
    <thead class="table-dark">
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSort">Título</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.AuthorSort">Autor</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TemaSort">Tema</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.PrecoSort">Preço</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.QuantidadeSort">Quantidade</a>
            </th>
            <th>Cotação Especial</th>
            <th>Quantidade</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var livro in Model.Livros)
        {
            var indisponivel = livro.Quantidade == 0 ? "linha-indisponivel" : "";

            <tr class="@indisponivel">
                <td>@livro.Titulo</td>
                <td>@livro.Autor</td>
                <td>@string.Join(", ", livro.Temas.Select(t => t.Nome))</td>
                <td>R$ @livro.PrecoCompra.ToString("F2")</td>
                <td>@livro.Quantidade</td>
                <td>@(livro.LivroCotacaoEspecial ? "Sim" : "Não")</td>
                <td>
                    @if (livro.Quantidade > 0)
                    {
                        <form asp-page-handler="AdicionarAoCarrinho" method="post" class="d-flex gap-2 align-items-center">
                            <input type="hidden" name="livroId" value="@livro.Id" />
                            <input class="form-control form-control-sm text-warning"
                                   type="number"
                                   name="quantidade"
                                   min="1"
                                   max="@livro.Quantidade"
                                   value="1"
                                   style="width: 70px;" />
                            <button type="submit" class="btn btn-sm btn-success">Carrinho</button>
                        </form>
                    }
                    else
                    {
                        <!-- Botão que abre modal para lista de espera -->
                        <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#modalListaEspera" data-livroid="@livro.Id" data-livrotitulo="@livro.Titulo">
                            Entrar na lista de espera
                        </button>
                    }
                </td>
                <td></td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade text-dark" id="modalListaEspera" tabindex="-1" aria-labelledby="modalListaEsperaLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post" asp-page-handler="EntrarListaEspera">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title" id="modalListaEsperaLabel">Entrar na lista de espera</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="livroIdModal" name="livroId" value="" />
                    <p>Você quer ser avisado quando o livro <strong id="livroTituloModal"></strong> estiver disponível.</p>
                    <p>Confirme seu interesse para entrar na lista de espera.</p>
                    @if (!User.Identity.IsAuthenticated)
                    {
                        <p class="text-danger">Você precisa estar logado para entrar na lista de espera.</p>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-warning" @(User.Identity.IsAuthenticated ? "" : "disabled")>Confirmar</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        var modalListaEspera = document.getElementById('modalListaEspera');
        modalListaEspera.addEventListener('show.bs.modal', function (event) {
          var button = event.relatedTarget;
          var livroId = button.getAttribute('data-livroid');
          var livroTitulo = button.getAttribute('data-livrotitulo');
          modalListaEspera.querySelector('#livroIdModal').value = livroId;
          modalListaEspera.querySelector('#livroTituloModal').textContent = livroTitulo;
        });
    </script>
}

<nav aria-label="Navegação de página">
    <ul class="pagination justify-content-center">
        @if (Model.Livros.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-route-pageIndex="@(Model.Livros.PageIndex - 1)"
                   asp-route-sortOrder="@Model.CurrentSort"
                   asp-route-currentTitle="@Model.CurrentTitle"
                   asp-route-currentAuthor="@Model.CurrentAuthor"
                   asp-route-currentTema="@Model.CurrentTema"
                   asp-route-somenteDisponiveis="@Model.SomenteDisponiveis"
                   asp-route-mostrarCotacaoEspecial="@Model.MostrarCotacaoEspecial">
                    Anterior
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled"><span class="page-link">Anterior</span></li>
        }

        <li class="page-item disabled">
            <span class="page-link">
                Página @Model.Livros.PageIndex de @Model.Livros.TotalPages
            </span>
        </li>

        @if (Model.Livros.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-route-pageIndex="@(Model.Livros.PageIndex + 1)"
                   asp-route-sortOrder="@Model.CurrentSort"
                   asp-route-currentTitle="@Model.CurrentTitle"
                   asp-route-currentAuthor="@Model.CurrentAuthor"
                   asp-route-currentTema="@Model.CurrentTema"
                   asp-route-somenteDisponiveis="@Model.SomenteDisponiveis"
                   asp-route-mostrarCotacaoEspecial="@Model.MostrarCotacaoEspecial">
                    Próxima
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled"><span class="page-link">Próxima</span></li>
        }
    </ul>
</nav>

<p class="mt-5 text-center text-light">
    Para aluguel de livros é feito uma cobrança de 2,50 por livro por semana para um máximo de 3 meses. Livros de cotação especial possuem um valor de 10 reais por semana por livro com um máximo de 15 dias de aluguel.
</p>
